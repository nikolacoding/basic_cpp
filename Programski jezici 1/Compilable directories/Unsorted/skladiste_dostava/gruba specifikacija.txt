Pri kreiranju klasa, odvojiti definiciju i implementaciju metoda u distikntne parove datoteka zaglavlja i implementacije.
Ključne stavke za obratiti pažnju kod kreiranja svake klase:
	- onemogućiti direktan pristup "internim" promjenljivima (npr. pozicija), već za pristup tim podacima kreirati getere
	- pravilnim korišćenjem kvalifikatora/ključnih riječi što preciznije ograničiti funkcionalnost svake metode i nivo pristupa 
i modifikacije svakog atributa; npr. koristiti 'const' za getere jer znamo da neće direktno mijenjati atribute i sl.
	- pri implementaciji metoda klase ILI koristiti getere ILI direktno pristupati privatnim atributima, ne miješati
	- ne koristiti zaglavlja iz C-a
	- onemogućiti višestruko uključivanje istog zaglavlja
	- pridržavati se iste konvencije za imenovanje ali i generalni stil pisanja koda i implementacija sličnih metoda




>>> Zadatak:

- kreirati 6 klasa:

1. Klasa koja opisuje firmu tj. skladište:
	- skladište se sastoji od sljedećih atributa:
		- maksimalni gubitak prije nego sto se firma zatvori (argument konstruktora)
		- maksimalni profit prije nego sto se firma preseli (argument konstruktora)
		- dinamički niz od N (argument konstruktora) stekova (klasa 5) koji intuitivno predstavlja gomile paketa tj. pošiljaka u skladištu
		- trenutno finansijsko stanje

2. Klasa koja opisuje jedan kamion tj. dostavljača:
	- dostavljač se sastoji od sljedećih atributa:
		- Ime (jednostavan nadimak, pseudonim) (argument konstruktora)
		- maksimalni kapacitet (nasumična vrijednost između 50kg i 200kg)
		- brzina [km/h] (nasumična vrijednost između 50km/h i 100km/h)

3. Klasa koja opisuje primaoca:
	- primaoci se sastoje od sljedećih atributa:
		- Ime i prezime (inicijali oblika npr. "C.J.", nasumično generisani velikim slovima azbuke)
		- očekivano vrijeme dostave (nasumično generisan prirodnim brojem predstavljen broj sati između 24h i 72h)
		- trenutno vrijeme čekanja
		- udaljenost od skladišta (nasumično generisan prirodnim brojem predstavljen broj kilometara između 100km i 400km)

4. Klasa koja opisuje pošiljku:
	- pošiljke se sastoje od sljedećih atributa:
		- identifikator (statično inkrementiran redni broj)
		- masa [kg] (nasumično, 1kg - 20kg)
		- maloprodajna cijena [KM] (nasumično, 20KM - 100KM)
		- veleprodajna cijena [KM] (tačno (konstruktorski argument)% veća od maloprodajne cijene, njihovu razliku ćemo nadalje nazivati marža)
		- primalac (potpuno nasumično generisan u sklopu konstruktora)

5. Klasa koja opisuje pošiljke koje su dostupne u skladištu:
	- ova klasa sadrži sljedeće atribute:
		- maksimalni kapacitet (stalna vrijednost, dodjeljuje se konstruktorom)
		- dinamički alociran niz pošiljaka stalnog kapaciteta u skladu sa atributom iznad
		- indeks elementa na vrhu
	- ova klasa implementira stek koji funkcioniše kroz sljedeće metode:
		- push() - stavljanje na stek
		- pop() - skidanje sa steka
		- destruktor koji dealocira dinamički alociran niz kada se dati stek isprazni

6. Uvoznik paketa:
	- sastoji se od sljedecih atributa:
		- broj novih paketa po "talasu" (argument konstruktora)
		- prosjecna cijena paketa (argument konstruktora)
		- varijacija cijene paketa (argument konstruktora)
	- sadrži i jednu glavnu metodu koja se poziva na početku svakog talasa da realizuje uvoz

7. Statistika:
	- sastoji se iz sljedecih atributa:
		(podrazumijeva se da su u pitanju sume)
		- ukupno uvezeno paketa (i njihova mpc)
		- ukupno prodano paketa (i njihova vpc, te cijena prodavanja)
		- ukupno dostava izvrsenih u plusu
		- ukupno dostava izvrsenih u minusu
		- ukupan broj "prenocenih" paketa
		- ukupan broj paketa koji nisu nikad dostavljeni
	- sadrži samo jednu metodu koja formatirano ispisuje sve izbrojane atribute

U glavnoj funkciji instancirati jedno skladište sa 4 steka pošiljaka i maksimalnim gubitkom i profitom od -1000KM i 1000KM respektivno. Takođe instancirati uvoznik i konstruktorom unijeti sve njegove atribute.
Uz sve to instancirati 5 dostavljača sa proizvoljnim pseudonimima, i naravno jednu instancu statistike.

Program radi na principu teoretski beskonacne petlje koja se prekida kada trenutno finansijsko stanje skladišta izadje iz jedne od dvije granice definisane u sklopu skladišta.

Petlju karakterišu talasi koje započinje korisnik potvrdnim odgovorom na upit koji se postavlja prvobitno pri početku izvršavanja, a od tog momenta nadalje na kraju izvršavanja svakog talasa.

Jedan talas karakteriše sljedeće:
	- dodavanje paketa (na svaku gomilu dodaje se tačno onoliko koliko iznosi odgovarajući atribut uvoznika paketa) koristeći sve atribute odgovarajuće klase
	- dolazak dostavljača i uzimanje paketa (svaki dostavljač redom provjerava samo jedan element svake gomile (vrh steka), pakuje u kamion onoliko koliko mu može stati u skladu sa maksimalnim
		kapacitetom i sprema se za dostavu čekajući ostale dostavljače da urade isto
	- kreće dostava, svaki dostavljač (istovremeno) vozi do jednog primaoca, pa se teleportuje nazad do skladišta, pa do drugog itd. dok ne dostavi sve što je spakovao u kamion
		- ovo sve, naravno, se izvršava samo računski u skladu sa svim parametrima kojim barataju dostavljač i primalac
	- nakon što posljednji dostavljač izvrši posljednju dostavu, počinje kolektivna pauza koja završava tačno 12 sati kasnije
	- talas se završava i korisniku se daje opcija da pokrene sljedeći ili da obustavi rad skladišta istog trenutka

Napomena: Primaoci koji dobiju svoj paket na vrijeme plaćaju njegov puni iznos, međutim primaoci kod kojih paket kasni isti plaćaju 2% manje za svaki sat kašnjenja.
Kupcu se naplaćuje veleprodajna cijena, a analogno tome se profit (gubitak) računa kao razlika iznosa koji je kupac platio i maloprodajne cijene.
Ukoliko kupac plati punu cijenu, što će uraditi ako mu se pošiljka dostavi na vrijeme, skladište ostvaruje profit tačno jednak marži. Ukoliko je kašnjenje takvo da se izgubilo nešto vrijednosti dostave, 
ali je ipak kupac platio više nego što je maloprodajna cijena, ostvaruje se umanjen profit. Ukoliko je, ipak, očekivano vrijeme dostave u toj mjeri probijeno da je kupac platio manje od maloprodajne cijene
pošiljke, ostvaruje se gubitak. Razlika sume ukupnog zarađenog novca po dostavi pošiljaka i sume svih maloprodajnih cijena artikala ikad uvezenih u skladište predstavlja trenutno finansijsko stanje
skladišta.

Pustiti da navedena simulacija traje dok se prekine ranije pomenuta petlja. Svaku dostavu kao i relevantne cifre koju nju karakterišu ispisati na standardni izlaz. Kalibrisati konstruktorske vrijednosti da
dovedu do nepredvidivih rezultata, tj. da nije poznato kako će svaka simulacija završiti prije nego što počne.